#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"kind": "Secret", "metadata":{"name":"postgres-postgresql-ha-pgpool"}}), expects=1
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/versioned: ""
#@overlay/replace
data:
  #@ if len(data.values.pgpool.admin.password) == 0:
  #@  assert.fail("pgpool.admin.password cannot be empty")
  #@ end
  admin-password: #@ base64.encode(data.values.pgpool.admin.password)

#@overlay/match by=overlay.subset({"kind": "Secret", "metadata":{"name":"postgres-postgresql-ha-postgresql"}}), expects=1
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/versioned: ""
#@overlay/replace
data:
  #@ if len(data.values.postgres.database.password) == 0:
  #@  assert.fail("postgres.database.password cannot be empty")
  #@ end
  #@ if len(data.values.postgres.repmgr.password) == 0:
  #@  assert.fail("postgres.repmgr.password cannot be empty")
  #@ end
  postgresql-password: #@ base64.encode(data.values.postgres.database.password)
  repmgr-password: #@ base64.encode(data.values.postgres.repmgr.password)
