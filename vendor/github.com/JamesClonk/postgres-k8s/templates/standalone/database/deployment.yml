#@ load("@ytt:data", "data")
#@ load("_ytt.lib.yml", "labels", "resources", "disk")
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: #@ data.values.app + "-database"
  namespace: #@ data.values.namespace
  labels: #@ labels("database")
spec:
  serviceName: #@ data.values.app + "-database"
  replicas: 1
  selector:
    matchLabels: #@ labels("database")
  template:
    metadata:
      labels: #@ labels("database")
    spec:
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: #@ data.values.postgres.image
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: #@ data.values.app + "-database-secret"
        securityContext:
          allowPrivilegeEscalation: false
        resources: #@ resources()
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -h 127.0.0.1 -p 5432 -d "${POSTGRES_DB}" -U "${POSTGRES_USER}"
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -h 127.0.0.1 -p 5432 -d "${POSTGRES_DB}" -U "${POSTGRES_USER}"
          failureThreshold: 5
          initialDelaySeconds: 45
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: #@ data.values.app + "-volume"
