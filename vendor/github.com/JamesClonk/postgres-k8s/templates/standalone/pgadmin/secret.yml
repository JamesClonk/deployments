#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("_ytt.lib.yml", "labels")

#@ if data.values.pgadmin.enabled:
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.app + "-pgadmin-secret"
  namespace: #@ data.values.namespace
  labels: #@ labels("pgadmin")
  annotations:
    kapp.k14s.io/versioned: ""
type: Opaque
stringData:
  #@ if len(data.values.pgadmin.auth.user) == 0:
  #@  assert.fail("data.values.pgadmin.auth.user cannot be empty")
  #@ end
  PGADMIN_DEFAULT_EMAIL: #@ data.values.pgadmin.auth.user
  #@ if len(data.values.pgadmin.auth.password) == 0:
  #@  assert.fail("data.values.pgadmin.auth.password cannot be empty")
  #@ end
  PGADMIN_DEFAULT_PASSWORD: #@ data.values.pgadmin.auth.password
  PGADMIN_LISTEN_PORT: "8080"
  #@yaml/text-templated-strings
  servers.json: |
    {
        "Servers": {
            "(@= data.values.app @)": {
                "Name": "(@= data.values.app @)",
                "Group": "Servers",
                "Port": (@= str(data.values.postgres.database.port) @),
                "Username": "(@= data.values.postgres.database.user @)",
                "Host": "(@= data.values.app + '-database.' + data.values.namespace + '.svc.cluster.local' @)",
                "SSLMode": "prefer",
                "MaintenanceDB": "postgres"
            }
        }
    }
#@ end
