#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"kind": "NetworkPolicy", "metadata":{"name":"prometheus-server"}}), expects=1
---
spec:
  #@overlay/replace, expects=1
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: prometheus
          release: prometheus
    ports:
    - port: 9090
  - from:
    - namespaceSelector:
        matchLabels:
          app.kubernetes.io/name: grafana
          app.kubernetes.io/instance: grafana
      podSelector:
        matchLabels:
          app.kubernetes.io/name: grafana
          app.kubernetes.io/instance: grafana
    ports:
    - port: 9090
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - port: 9090

#@overlay/match by=overlay.subset({"kind": "PodSecurityPolicy"}), expects="5+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    #@overlay/match missing_ok=True
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    #@overlay/match missing_ok=True
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    #@overlay/match missing_ok=True
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  #@overlay/match missing_ok=True
  allowPrivilegeEscalation: false

#@overlay/match by=overlay.subset({"kind": "DaemonSet", "metadata":{"name":"prometheus-node-exporter"}}), expects=1
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"prometheus-node-exporter"}), expects=1
      - name: prometheus-node-exporter
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata":{"name":"prometheus-kube-state-metrics"}}), expects=1
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"kube-state-metrics"}), expects=1
      - name: kube-state-metrics
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata":{"name":"prometheus-alertmanager"}}), expects=1
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"prometheus-alertmanager-configmap-reload"}), expects=1
      - name: prometheus-alertmanager-configmap-reload
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false
      #@overlay/match by=overlay.subset({"name":"prometheus-alertmanager"}), expects=1
      - name: prometheus-alertmanager
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata":{"name":"prometheus-pushgateway"}}), expects=1
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"prometheus-pushgateway"}), expects=1
      - name: prometheus-pushgateway
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata":{"name":"prometheus-server"}}), expects=1
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"prometheus-server-configmap-reload"}), expects=1
      - name: prometheus-server-configmap-reload
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false
      #@overlay/match by=overlay.subset({"name":"prometheus-server"}), expects=1
      - name: prometheus-server
        #@overlay/match missing_ok=True
        securityContext:
          #@overlay/match missing_ok=True
          privileged: false
          #@overlay/match missing_ok=True
          allowPrivilegeEscalation: false
