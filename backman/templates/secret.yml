#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.app
  namespace: #@ data.values.namespace
  annotations:
    kapp.k14s.io/versioned: ""
type: Opaque
#@yaml/text-templated-strings
stringData:
  BACKMAN_USERNAME: #@ data.values.backman.username
  BACKMAN_PASSWORD: #@ data.values.backman.password
  PROBE_AUTHORIZATION: #@ 'Basic ' + base64.encode(data.values.backman.username + ':' + data.values.backman.password)
  BACKMAN_CONFIG: |
    {
      "log_level": "debug",
      "s3": {
        "service_label": "user-provided",
        "service_name": "backman-storage",
        "bucket_name": "backman-storage"
      }
    }
  VCAP_APPLICATION: |
    {
      "application_id": "(@= data.values.app @)",
      "application_name": "(@= data.values.app @)",
      "application_uris": [
        "(@= data.values.app @).(@= data.values.namespace @).pod.cluster.local"
      ],
      "application_version": "(@= data.values.backman.image @)",
      "name": "(@= data.values.app @)",
      "organization_name": "(@= data.values.namespace @)",
      "space_name": "(@= data.values.namespace @)",
      "uris": [
        "(@= data.values.app @).(@= data.values.namespace @).pod.cluster.local"
      ],
      "version": "(@= data.values.backman.image @)"
    }
  VCAP_SERVICES: |
    {
      "user-provided": [{
        "credentials": {
            "region": "fr-par",
            "accessHost": "(@= data.values.backman.s3.host @)",
            "accessKey": "(@= data.values.backman.s3.key @)",
            "sharedSecret": "(@= data.values.backman.s3.secret @)"
        },
        "label": "user-provided",
        "name": "backman-storage"
      }
      (@- for db in data.values.backman.postgres: -@)
      , {
        "credentials": {
            "database": "(@= db.database @)",
            "database_uri": "(@= db.uri @)",
            "jdbcUrl": "(@= db.uri @)",
            "name": "(@= db.database @)",
            "uri": "(@= db.uri @)"
        },
        "label": "user-provided",
        "name": "(@= db.name @)"
      }
      (@- end -@)
      ]
    }
