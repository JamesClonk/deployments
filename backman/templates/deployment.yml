#@ load("@ytt:data", "data")
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backman
  namespace: backman
spec:
  selector:
    matchLabels:
      app: backman
      app.service: backman
      app.service.component: gui
  replicas: 1
  template:
    metadata:
      labels:
        app: backman
        app.service: backman
        app.service.component: gui
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - backman
                - key: app.service
                  operator: In
                  values:
                  - backman
                - key: app.service.component
                  operator: In
                  values:
                  - gui
      containers:
      - name: backman
        image: #@ data.values.backman.image
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: TZ
          value: "Europe/Zurich"
        - name: BACKMAN_USERNAME
          value: #@ data.values.backman.username
        - name: BACKMAN_PASSWORD
          value: #@ data.values.backman.password
        - name: BACKMAN_CONFIG
          value: |
            {
              "log_level": "debug",
              "s3": {
                "service_label": "user-provided",
                "service_name": "backman-storage",
                "bucket_name": "backman-storage"
              }
            }
        - name: VCAP_APPLICATION
          value: #@ data.values.backman.vcap_application
        - name: VCAP_SERVICES
          value: #@ data.values.backman.vcap_services
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8080
            httpHeaders:
            - name: Authorization
              value: #@ data.values.backman.auth_header
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          httpGet:
            path: /api/v1/states
            port: 8080
            httpHeaders:
            - name: Authorization
              value: #@ data.values.backman.auth_header
