#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("_ytt.lib.yml", "labels", "connstr")
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.app
  namespace: #@ data.values.namespace
  labels: #@ labels()
  annotations:
    kapp.k14s.io/versioned: ""
type: Opaque
stringData:
  #@ if len(data.values.pgweb.auth.username) == 0:
  #@  assert.fail("data.values.pgweb.auth.username cannot be empty")
  #@ end
  AUTH_USER: #@ data.values.pgweb.auth.username
  #@ if len(data.values.pgweb.auth.password) == 0:
  #@  assert.fail("data.values.pgweb.auth.password cannot be empty")
  #@ end
  AUTH_PASS: #@ data.values.pgweb.auth.password
  #@yaml/text-templated-strings
  home_info.toml: |
    url = "(@= connstr(data.values.databases.home_info.username, data.values.databases.home_info.password, data.values.databases.home_info.host, data.values.databases.home_info.db_name) @)"
  #@yaml/text-templated-strings
  irvisualizer.toml: |
    url = "(@= connstr(data.values.databases.irvisualizer.username, data.values.databases.irvisualizer.password, data.values.databases.irvisualizer.host, data.values.databases.irvisualizer.db_name) @)"
  #@yaml/text-templated-strings
  jcio.toml: |
    url = "(@= connstr(data.values.databases.jcio.username, data.values.databases.jcio.password, data.values.databases.jcio.host, data.values.databases.jcio.db_name) @)"
