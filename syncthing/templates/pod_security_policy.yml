#@ load("@ytt:data", "data")
#@ load("_ytt.lib.yml", "labels")

#@ if data.values.syncthing.enable_pod_security_policy:
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: #@ data.values.app
  namespace: #@ data.values.namespace
  labels: #@ labels("role")
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - #@ data.values.app
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ data.values.app
  namespace: #@ data.values.namespace
  labels: #@ labels("role-binding")
roleRef:
  kind: Role
  name: #@ data.values.app
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: #@ data.values.app
  namespace: #@ data.values.namespace
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: #@ data.values.app
  namespace: #@ data.values.namespace
  labels: #@ labels("psp")
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - configMap
  - persistentVolumeClaim
  - emptyDir
  - secret
  readOnlyRootFilesystem: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: 'RunAsAny'
  runAsUser:
    rule: 'MustRunAs'
    ranges:
    - min: 2007
      max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
    - min: 2007
      max: 65535
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
    - min: 2007
      max: 65535
#@ end
